load("~/Dropbox/C++/Machine_Learning/Coursera_Data_Science/datasci_course_materials/assignment5/setup.r")
install.packages("caret")
install.packages("rpart")
install.packages("tree")
install.packages("randomForest")
install.packages("e1071")
install.packages("ggplot2")
ls
clear
clc
summary(seaflow)
summary(seaflow)
seaflow= read.csv("seaflow_21min.csv",header=TRUE);
pwd
source('~/Dropbox/C++/Machine_Learning/Coursera_Data_Science/datasci_course_materials/assignment5/firstprog.r')
x1=3
source('~/Dropbox/C++/Machine_Learning/Kaggle_Scikit_Learn_R/R/hellor.R')
source('~/Dropbox/C++/Machine_Learning/Kaggle_Scikit_Learn_R/R/hellor.R', echo=TRUE)
source('~/Google Drive/C++/Probability_Courses/Harvard_AM207/Homework/Homework1/problem2.R')
source('~/Google Drive/C++/Probability_Courses/Harvard_AM207/Homework/Homework1/problem2.R')
source('~/Google Drive/C++/Probability_Courses/Harvard_AM207/Homework/Homework1/problem2.R')
install.packages("Rcpp")
library(Rcpp)
version
cat('\014')
library(Rcpp)
cppFunction('int add(int x,int y){return 1;}')
add(1,2)
add(1,356)
library(ggplot2)
A = ggplot() + annotation_custom(grob=circleGrob(r=unit(1,"npc")), xmin=2, xmax=4, ymin=4, ymax=6)
library(Rcpp)
version()
version
library(Rcpp)
?Rcpp
a = factor(c(4,5,6,5,4,3,4))
a
levels(a)
as.numeric(a)
attr(a)
str(a)
levels(a)
levels(a)[2]
levels(a)[1]
data(BreastCancer)
library(MASS)
MASS
data(BreastCancer)
?MASS
??MASS
library(mlbench)
data(BreastCancer)
B= BreastCancer
names(B)
summary(B)
data(shuttle)
summary(shuttle)
hist_data <- c( rnorm(100,1,1), rnorm(100,2,1) )
hist_df <- data_frame(hist=hist_data)
library(ggplot2)
p_hist <- ggplot() + geom_bar(aes(x=hist),stat="bin")
print(p_hist)
hist_data <- c( rnorm(100,1,1), rnorm(100,2,1) )
hist_df <- data_frame(A=hist_data)
library(ggplot2)
p_hist <- ggplot() + geom_bar(aes(x=A),stat="bin")
print(p_hist)
hist_data <- c( rnorm(100,1,1), rnorm(100,2,1) )
hist_df <- data_frame(A=hist_data)
library(ggplot2)
p_hist <- ggplot(data=hist_df) + geom_bar(aes(x=A),stat="bin")
print(p_hist)
hist_data <- c( rnorm(100,1,1), rnorm(100,2,1) )
hist_df <- data_frame(A=hist_data)
hist_df <- data.frame(A=hist_data)
library(ggplot2)
p_hist <- ggplot(data=hist_df) + geom_bar(aes(x=A),stat="bin")
print(p_hist)
hist_data <- c( rnorm(100,1,1), rnorm(100,3,2) )
hist_df <- data.frame(A=hist_data)
library(ggplot2)
p_hist <- ggplot(data=hist_df) + geom_bar(aes(x=A),stat="bin")
print(p_hist)
w <-0.1
break_vec <- seq(from = min(hist_data), to= max(hist_data), by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
w <-0.1
break_vec <- seq(from = min(hist_data)-w, to= max(hist_data)+w, by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
w <-0.1
break_vec <- seq(from = min(hist_data)-w, to= max(hist_data)+w, by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
nhist_df <- data.frame(count=h1$counts, xval = h1$mids)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
print( sum(nhist_df$count))
w <-0.1
break_vec <- seq(from = min(hist_data)-w, to= max(hist_data)+w, by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
nhist_df <- data.frame(count=h1$counts, xval = h1$mids)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
print( sum(nhist_df$count*w))
w <-0.1
break_vec <- seq(from = min(hist_data)-w, to= max(hist_data)+w, by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
nhist_df <- data.frame(count=h1$counts, xval = h1$mids)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
print(paste("Area under the curve is",sum(nhist_df$count*w)))
w <-0.1
break_vec <- seq(from = min(hist_data)-w, to= max(hist_data)+w, by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
nhist_df <- data.frame(count=h1$counts, xval = h1$mids)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
print(paste("Area under the curve is",sum(nhist_df$count*w)))
p_norm <- ggplot(nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_norm)
w <-0.2
break_vec <- seq(from = min(hist_data)-w, to= max(hist_data)+w, by = w)
h1 <- hist(hist_data, breaks= break_vec, plot=F)
nhist_df <- data.frame(count=h1$counts, xval = h1$mids)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
print(paste("Area under the curve is",sum(nhist_df$count*w)))
p_norm <- ggplot(nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_norm)
source('~/.active-rstudio-document', echo=TRUE)
head(nhist_df)
break_vec[1:5]
tophat_kernel <-function(x, x_n, width)
{
if( abs(x-x_n)<width/2. )
return(1)
else
return(0)
}
construct_hist <-function(hist_data, break_vec,width)
{
mids_vec <- break_vec + width/2
count_vec <- rep(0, length(mids_vec))
for( i in 1:length(count_vec))
{
for(j in 1:length(hist_data))
{
count_vec[i] <- count_vec[i] + tophat_kernel(hist_data[j],mids_vec[i], width)
}
}
nhist_df <- data.frame(count=count_vec, xval = mids_vec)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
return(nhist_df)
}
derived_nhist_df <-construct_hist(hist_data, break_vec, w)
p_norm2 <- ggplot(derived_nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_norm2)
tophat_kernel <-function(x, x_n, width)
{
if( abs(x-x_n)<width/2. )
return(1)
else
return(0)
}
construct_hist <-function(hist_data, break_vec,width, kernel_function)
{
mids_vec <- break_vec + width/2
count_vec <- rep(0, length(mids_vec))
for( i in 1:length(count_vec))
{
for(j in 1:length(hist_data))
{
count_vec[i] <- count_vec[i] + kernel_function(hist_data[j],mids_vec[i], width)
}
}
nhist_df <- data.frame(count=count_vec, xval = mids_vec)
nhist_df$count <- nhist_df$count/(w*length(hist_data))
return(nhist_df)
}
derived_nhist_df <-construct_hist(hist_data, break_vec, w, tophat_kernel)
p_norm2 <- ggplot(derived_nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_norm2)
exp(1)
pi
sqrt(2)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*h^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, w, gaussian_kernel)
p_gauss <- ggplot(gauss_nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, w, gaussian_kernel)
p_gauss <- ggplot(gauss_nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, w, gaussian_kernel)
p_gauss <- ggplot(gauss_hist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, 0.05, gaussian_kernel)
p_gauss <- ggplot(gauss_hist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, 0.15, gaussian_kernel)
p_gauss <- ggplot(gauss_hist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, 0.25, gaussian_kernel)
p_gauss <- ggplot(gauss_hist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec, 0.75, gaussian_kernel)
p_gauss <- ggplot(gauss_hist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
gaussian_kernel <- function(x,x_n, width)
{
norm_val = ( 1./sqrt(2.*pi*width*width) )*exp(-(x-x_n)^2/(2*width^2))
return(norm_val)
}
gauss_hist_df <-construct_hist(hist_data, break_vec,w, gaussian_kernel)
p_gauss <- ggplot(gauss_hist_df) + geom_bar(aes(x=xval, y=count), stat="identity")
print(p_gauss)
p_comp <- ggplot(derived_nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count))
print(p_comp)
source('~/.active-rstudio-document', echo=TRUE)
p_comp <- ggplot(derived_nhist_df) + geom_bar(aes(x=xval, y=count), stat="identity") +
geom_point(data=gauss_hist_df, aes(x=xval,y=count), colour="red") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count), colour="blue")
print(p_comp)
p_comp <- ggplot() + geom_bar(data = derived_nhist_df, aes(x=xval, y=count), stat="identity") +
geom_point(data=gauss_hist_df, aes(x=xval,y=count), colour="red") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count), colour="blue")
print(p_comp)
p_comp <- ggplot() + geom_bar(data = gauss_hist_df, aes(x=xval, y=count), stat="identity") +
geom_point(data=gauss_hist_df, aes(x=xval,y=count), colour="red") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count), colour="blue")
print(p_comp)
p_comp <- ggplot() + geom_bar(data = derived_nhist_df, aes(x=xval, y=count), stat="identity") +
geom_point(data=gauss_hist_df, aes(x=xval,y=count), colour="red") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count), colour="blue")
print(p_comp)
p_comp <- ggplot() + geom_bar(data = derived_nhist_df, aes(x=xval, y=count), stat="identity") +
geom_point(data=gauss_hist_df, aes(x=xval,y=count), colour="red") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count), colour="blue", size=1)
print(p_comp)
p_comp <- ggplot() + geom_bar(data = derived_nhist_df, aes(x=xval, y=count), stat="identity") +
geom_point(data=gauss_hist_df, aes(x=xval,y=count), colour="red") +
geom_line(data=gauss_hist_df, aes(x=xval,y=count), colour="blue", size=2)
print(p_comp)
gauss_hist_w1 <-construct_hist(hist_data, break_vec,0.1, gaussian_kernel)
p_1 <- ggplot(gauss_hist_w1) + geom_bar(aes(x=xval, y=count), stat="identity")
gauss_hist_w3 <-construct_hist(hist_data, break_vec,0.5, gaussian_kernel)
p_3 <- ggplot(gauss_hist_w3) + geom_bar(aes(x=xval, y=count), stat="identity")
gauss_hist_w4 <-construct_hist(hist_data, break_vec,0.5, gaussian_kernel)
p_4 <- ggplot(gauss_hist_w4) + geom_bar(aes(x=xval, y=count), stat="identity")
library(gridExtra)
grid.arrange(p_1,p_gauss, p_3,p_4, ncol=2)
install.package("gridExtra")
install.packages("gridExtra")
gauss_hist_w1 <-construct_hist(hist_data, break_vec,0.1, gaussian_kernel)
p_1 <- ggplot(gauss_hist_w1) + geom_bar(aes(x=xval, y=count), stat="identity")
gauss_hist_w3 <-construct_hist(hist_data, break_vec,0.5, gaussian_kernel)
p_3 <- ggplot(gauss_hist_w3) + geom_bar(aes(x=xval, y=count), stat="identity")
gauss_hist_w4 <-construct_hist(hist_data, break_vec,0.5, gaussian_kernel)
p_4 <- ggplot(gauss_hist_w4) + geom_bar(aes(x=xval, y=count), stat="identity")
library(gridExtra)
grid.arrange(p_1,p_gauss, p_3,p_4, ncol=2)
gauss_hist_w1 <-construct_hist(hist_data, break_vec,0.1, gaussian_kernel)
p_1 <- ggplot(gauss_hist_w1) + geom_bar(aes(x=xval, y=count), stat="identity")
gauss_hist_w3 <-construct_hist(hist_data, break_vec,0.5, gaussian_kernel)
p_3 <- ggplot(gauss_hist_w3) + geom_bar(aes(x=xval, y=count), stat="identity")
gauss_hist_w4 <-construct_hist(hist_data, break_vec,2, gaussian_kernel)
p_4 <- ggplot(gauss_hist_w4) + geom_bar(aes(x=xval, y=count), stat="identity")
library(gridExtra)
grid.arrange(p_1,p_gauss, p_3,p_4, ncol=2)
setwd("~/Google_Drive/C++/Github/fastAdaboost")
library(devtools)
dev_mode()
load_all()
load_all()
document()
check()
tests()
test()
load_all()
document()
test()
check()
use_readme_rmd()
knit(input="README.Rmd",output="README.md")
library(knitr)
knit(input="README.Rmd",output="README.md")
document()
check()
document()
check()
build(manual=T)
manual()
manual()
devtools::manual()
build(manual=T, vignette=T)
build(binary=T,manual=T, quiet=F)
has_latex()
Sys.which("pdflatex")
library(utils)
library(Rdutils)
R CMD Rd2pdf
load_all()
tests()
test()
document()
check()
document()
document()
